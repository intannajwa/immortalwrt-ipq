#!/bin/sh
 
uci set firewall.@defaults[0].flow_offloading='0'
uci set firewall.@defaults[0].flow_offloading_hw='0'
uci commit firewall
 
uci delete network.wan6 2>/dev/null
uci commit network
 
uci set network.wan='interface'
uci set network.wan.proto='quectel'
uci set network.wan.auth='none'
uci set network.wan.delay='5'
uci set network.wan.mtu='1500'
uci set network.wan.pdptype='ipv4v6'
uci set network.wan.device='/dev/cdc-wdm0'
uci set network.wan.apn='internet'

uci del_list network.wan.dns 2>/dev/null
uci add_list network.wan.dns='1.1.1.1'
uci add_list network.wan.dns='1.0.0.1'

uci commit network
 
mkdir -p /etc/nftables.d
rm -f /etc/nftables.d/*

cat << 'EOF' > /etc/nftables.d/64ttl.nft
chain mangle_prerouting_ttl64 {
  type filter hook prerouting priority 300; policy accept;
  counter ip ttl set 64
}

chain mangle_postrouting_ttl64 {
  type filter hook postrouting priority 300; policy accept;
  counter ip ttl set 64
}

chain mangle_prerouting_hoplimit64 {
  type filter hook prerouting priority 300; policy accept;
  counter ip6 hoplimit set 64
}

chain mangle_postrouting_hoplimit64 {
  type filter hook postrouting priority 300; policy accept;
  counter ip6 hoplimit set 64
}
EOF

# === Add RPC LuCI controller if missing ===
[ ! -f /usr/lib/lua/luci/controller/rpc.lua ] && cat << 'EOF' > /usr/lib/lua/luci/controller/rpc.lua
module("luci.controller.rpc", package.seeall)

function index()
    entry({"rpc", "getCPUUsage"}, call("getCPUUsage"), nil).leaf = true
    entry({"rpc", "getTempInfo"}, call("getTempInfo"), nil).leaf = true
end

function getCPUUsage()
    local usage = luci.sys.exec("top -bn1 | grep -m1 'CPU:' | awk '{print \\$2}'")
    usage = usage:match("%d+%%") or "0%"
    luci.http.prepare_content("application/json")
    luci.http.write_json({ cpuusage = usage })
end

function getTempInfo()
    local temp = luci.sys.exec("cat /sys/class/thermal/thermal_zone0/temp")
    local value = tonumber(temp) or 0
    value = string.format("%.1f Â°C", value / 1000)
    luci.http.prepare_content("application/json")
    luci.http.write_json({ tempinfo = value })
end
EOF
 
chmod +x /etc/init.d/passwall2 2>/dev/null
 
/etc/init.d/firewall restart
/etc/init.d/network restart

exit 0
