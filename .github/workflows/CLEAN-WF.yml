name: Cleanup Old Workflows

on:
  workflow_dispatch:

permissions:
  actions: write
  contents: write

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Download GitHub CLI
        run: |
          curl -sSL https://github.com/cli/cli/releases/download/v2.47.0/gh_2.47.0_linux_amd64.tar.gz | tar -xz
          sudo cp gh_2.47.0_linux_amd64/bin/gh /usr/local/bin/

      - name: Authenticate with GITHUB_TOKEN
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Delete all but latest workflow runs
        run: |
          gh api -H "Accept: application/vnd.github+json" /repos/${{ github.repository }}/actions/runs?per_page=100 | \
          jq -r '.workflow_runs | sort_by(.created_at) | reverse | .[1:][] | .id' | \
          while read run_id; do
            echo "Deleting workflow run ID: $run_id"
            gh api --method DELETE /repos/${{ github.repository }}/actions/runs/$run_id
          done

      - name: Delete old releases (keep latest)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LATEST_TAG=$(gh api repos/${{ github.repository }}/tags --paginate --jq '.[].name' | head -n 1)
          echo "Latest tag: $LATEST_TAG"

          gh api repos/${{ github.repository }}/releases --paginate --jq '.[] | {id, tag_name}' | \
          jq -c '.' | while read release; do
            RELEASE_ID=$(echo "$release" | jq -r '.id')
            TAG_NAME=$(echo "$release" | jq -r '.tag_name')

            if [ "$TAG_NAME" != "$LATEST_TAG" ]; then
              echo "Deleting release: $TAG_NAME (ID: $RELEASE_ID)"
              gh api --method DELETE repos/${{ github.repository }}/releases/$RELEASE_ID
            else
              echo "Keeping latest release: $TAG_NAME"
            fi
          done

      - name: Delete old tags (keep latest)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAGS=$(gh api repos/${{ github.repository }}/tags --paginate --jq '.[].name')
          LATEST_TAG=$(echo "$TAGS" | head -n 1)

          for TAG in $TAGS; do
            if [ "$TAG" != "$LATEST_TAG" ]; then
              echo "Deleting tag: $TAG"
              gh api --method DELETE repos/${{ github.repository }}/git/refs/tags/$TAG
            fi
          done
